{
  "info": {
    "name": "Blog API Collection",
    "description": "Blog API için Postman collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminEmail",
      "value": "admin@user.com",
      "type": "string"
    },
    {
      "key": "adminPassword",
      "value": "123456",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\",\n  \"confirmPassword\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Yeni kullanıcı kaydı"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.accessToken.token);",
                  "    pm.collectionVariables.set('refreshToken', response.data.refreshToken.token);",
                  "    console.log('Tokens saved:', response.data.accessToken.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Kullanıcı girişi"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.accessToken.token);",
                  "    pm.collectionVariables.set('refreshToken', response.data.refreshToken.token);",
                  "    console.log('Access Token:', response.data.accessToken.token);",
                  "    console.log('Refresh Token:', response.data.refreshToken.token);",
                  "    console.log('Expires At:', response.data.accessToken.expiresAt);",
                  "    console.log('Token saved to collection variables');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Debug Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/debug",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "debug"]
            },
            "description": "Token debug bilgileri"
          }
        },
        {
          "name": "Get Me",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Kullanıcı profil bilgileri"
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Token yenileme"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.accessToken.token);",
                  "    pm.collectionVariables.set('refreshToken', response.data.refreshToken.token);",
                  "    console.log('Tokens refreshed successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"123456\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            },
            "description": "Şifre değiştirme"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Tüm kullanıcıları getir (Admin)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/68d4318a80320f2d46b2e259",
              "host": ["{{baseUrl}}"],
              "path": ["users", "68d4318a80320f2d46b2e259"]
            },
            "description": "Tek kullanıcı getir"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Abdullah AHLATLI Updated\",\n  \"bio\": \"Yazılım geliştirici ve sistem yöneticisi\",\n  \"avatar\": \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Profil güncelle"
          }
        },
        {
          "name": "Update Avatar Only",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Abdullah AHLATLI\",\n  \"bio\": \"Yazılım geliştirici ve sistem yöneticisi\",\n  \"avatar\": \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Sadece avatar güncelle (profil endpoint'i kullanarak)"
          }
        },
        {
          "name": "Get User Blogs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/68d4318a80320f2d46b2e259/blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users", "68d4318a80320f2d46b2e259", "blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Kullanıcının bloglarını getir"
          }
        }
      ]
    },
    {
      "name": "Blogs",
      "item": [
        {
          "name": "Get All Blogs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Tüm blogları getir"
          }
        },
        {
          "name": "Get Blog by Slug",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs/nodejs-ile-modern-backend-gelistirme",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "nodejs-ile-modern-backend-gelistirme"]
            },
            "description": "Tek blog getir"
          }
        },
        {
          "name": "Create Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Node.js ile Modern Backend Geliştirme\",\n  \"content\": \"Bu blog yazısında Node.js kullanarak modern bir backend API nasıl geliştirilir konusunu ele alacağız. Express.js framework'ü ile RESTful API oluşturma, MongoDB veritabanı entegrasyonu, JWT authentication sistemi ve daha birçok konuyu detaylı bir şekilde inceleyeceğiz.\",\n  \"excerpt\": \"Node.js kullanarak modern backend API geliştirme rehberi\",\n  \"category\": \"Yazılım Geliştirme\",\n  \"tags\": [\"nodejs\", \"express\", \"mongodb\", \"jwt\"],\n  \"isPublished\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/blogs",
              "host": ["{{baseUrl}}"],
              "path": ["blogs"]
            },
            "description": "Yeni blog oluştur"
          }
        },
        {
          "name": "Get My Blogs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/blogs/my-blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "my-blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Kendi bloglarım"
          }
        },
        {
          "name": "Get Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs/categories",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "categories"]
            },
            "description": "Blog kategorilerini getir"
          }
        },
        {
          "name": "Get Popular Tags",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs/tags",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "tags"]
            },
            "description": "Popüler etiketleri getir"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:5000/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "5000",
              "path": ["health"]
            },
            "description": "Server sağlık kontrolü"
          }
        }
      ]
    }
  ]
}
