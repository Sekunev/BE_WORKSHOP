{
  "info": {
    "name": "Blog API Collection",
    "description": "Blog API i√ßin Postman collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminEmail",
      "value": "admin@user.com",
      "type": "string"
    },
    {
      "key": "adminPassword",
      "value": "123456",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\",\n  \"confirmPassword\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Yeni kullanƒ±cƒ± kaydƒ±"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    ",
                  "    const accessToken = response.data.accessToken.token.trim();",
                  "    const refreshToken = response.data.refreshToken.token.trim();",
                  "    ",
                  "    pm.collectionVariables.set('accessToken', accessToken);",
                  "    pm.collectionVariables.set('refreshToken', refreshToken);",
                  "    ",
                  "    if (pm.environment.name) {",
                  "        pm.environment.set('accessToken', accessToken);",
                  "        pm.environment.set('refreshToken', refreshToken);",
                  "    }",
                  "    ",
                  "    console.log('‚úÖ Register ba≈üarƒ±lƒ±! Token kaydedildi.');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Kullanƒ±cƒ± giri≈üi"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    ",
                  "    // Token'larƒ± al ve temizle",
                  "    const accessToken = response.data.accessToken.token.trim();",
                  "    const refreshToken = response.data.refreshToken.token.trim();",
                  "    ",
                  "    // Collection variables'a kaydet",
                  "    pm.collectionVariables.set('accessToken', accessToken);",
                  "    pm.collectionVariables.set('refreshToken', refreshToken);",
                  "    ",
                  "    // Environment variables'a da kaydet (eƒüer environment varsa)",
                  "    if (pm.environment.name) {",
                  "        pm.environment.set('accessToken', accessToken);",
                  "        pm.environment.set('refreshToken', refreshToken);",
                  "    }",
                  "    ",
                  "    console.log('‚úÖ Login ba≈üarƒ±lƒ±!');",
                  "    console.log('üé´ Access Token:', accessToken.substring(0, 50) + '...');",
                  "    console.log('üîÑ Refresh Token:', refreshToken.substring(0, 50) + '...');",
                  "    console.log('‚è∞ Expires:', response.data.accessToken.expiresAt);",
                  "    console.log('üíæ Token kaydedildi (collection & environment)');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Debug Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/debug",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "debug"]
            },
            "description": "Token debug bilgileri"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Token kontrol√º",
                  "const token = pm.collectionVariables.get('accessToken') || pm.environment.get('accessToken');",
                  "console.log('üìã Kullanƒ±lan Token:', token ? token.substring(0, 50) + '...' : 'YOK!');",
                  "console.log('üì¶ Collection Token:', pm.collectionVariables.get('accessToken') ? 'VAR' : 'YOK');",
                  "console.log('üåç Environment Token:', pm.environment.get('accessToken') ? 'VAR' : 'YOK');"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Me",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Kullanƒ±cƒ± profil bilgileri"
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Token yenileme"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    ",
                  "    const accessToken = response.data.accessToken.token.trim();",
                  "    const refreshToken = response.data.refreshToken.token.trim();",
                  "    ",
                  "    pm.collectionVariables.set('accessToken', accessToken);",
                  "    pm.collectionVariables.set('refreshToken', refreshToken);",
                  "    ",
                  "    if (pm.environment.name) {",
                  "        pm.environment.set('accessToken', accessToken);",
                  "        pm.environment.set('refreshToken', refreshToken);",
                  "    }",
                  "    ",
                  "    console.log('‚úÖ Token yenilendi!');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"123456\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            },
            "description": "≈ûifre deƒüi≈ütirme"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "T√ºm kullanƒ±cƒ±larƒ± getir (Admin)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/68d4318a80320f2d46b2e259",
              "host": ["{{baseUrl}}"],
              "path": ["users", "68d4318a80320f2d46b2e259"]
            },
            "description": "Tek kullanƒ±cƒ± getir"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Abdullah AHLATLI Updated\",\n  \"bio\": \"Yazƒ±lƒ±m geli≈ütirici ve sistem y√∂neticisi\",\n  \"avatar\": \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Profil g√ºncelle"
          }
        },
        {
          "name": "Update Avatar Only",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Abdullah AHLATLI\",\n  \"bio\": \"Yazƒ±lƒ±m geli≈ütirici ve sistem y√∂neticisi\",\n  \"avatar\": \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Sadece avatar g√ºncelle (profil endpoint'i kullanarak)"
          }
        },
        {
          "name": "Get User Blogs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/68d4318a80320f2d46b2e259/blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users", "68d4318a80320f2d46b2e259", "blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Kullanƒ±cƒ±nƒ±n bloglarƒ±nƒ± getir"
          }
        }
      ]
    },
    {
      "name": "Blogs",
      "item": [
        {
          "name": "Get All Blogs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "T√ºm bloglarƒ± getir"
          }
        },
        {
          "name": "Get Blog by Slug",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs/nodejs-ile-modern-backend-gelistirme",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "nodejs-ile-modern-backend-gelistirme"]
            },
            "description": "Tek blog getir"
          }
        },
        {
          "name": "Create Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Node.js ile Modern Backend Geli≈ütirme\",\n  \"content\": \"Bu blog yazƒ±sƒ±nda Node.js kullanarak modern bir backend API nasƒ±l geli≈ütirilir konusunu ele alacaƒüƒ±z. Express.js framework'√º ile RESTful API olu≈üturma, MongoDB veritabanƒ± entegrasyonu, JWT authentication sistemi ve daha bir√ßok konuyu detaylƒ± bir ≈üekilde inceleyeceƒüiz.\",\n  \"excerpt\": \"Node.js kullanarak modern backend API geli≈ütirme rehberi\",\n  \"category\": \"Yazƒ±lƒ±m Geli≈ütirme\",\n  \"tags\": [\"nodejs\", \"express\", \"mongodb\", \"jwt\"],\n  \"isPublished\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/blogs",
              "host": ["{{baseUrl}}"],
              "path": ["blogs"]
            },
            "description": "Yeni blog olu≈ütur"
          }
        },
        {
          "name": "Get My Blogs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/blogs/my-blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "my-blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Kendi bloglarƒ±m"
          }
        },
        {
          "name": "Get Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs/categories",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "categories"]
            },
            "description": "Blog kategorilerini getir"
          }
        },
        {
          "name": "Get Popular Tags",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/blogs/tags",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "tags"]
            },
            "description": "Pop√ºler etiketleri getir"
          }
        }
      ]
    },
    {
      "name": "AI Blogs",
      "item": [
        {
          "name": "Generate AI Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"konu\": \"Yapay Zeka ƒ∞≈ü D√ºnyasƒ±nƒ± Nasƒ±l D√∂n√º≈üt√ºr√ºyor?\",\n  \"tarz\": \"profesyonel\",\n  \"kelimeSayisi\": 1200,\n  \"hedefKitle\": \"profesyoneller\",\n  \"autoPublish\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/blogs/ai/generate",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "ai", "generate"]
            },
            "description": "AI ile parametreli blog olu≈ütur (Admin only)"
          }
        },
        {
          "name": "Generate Random AI Blog",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"autoPublish\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/blogs/ai/generate-random",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "ai", "generate-random"]
            },
            "description": "Rastgele AI blog olu≈ütur (Admin only)"
          }
        },
        {
          "name": "Get AI Topics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/blogs/ai/topics",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "ai", "topics"]
            },
            "description": "Kullanƒ±lmƒ±≈ü ve kullanƒ±lmamƒ±≈ü blog konularƒ±nƒ± getir (Admin only)"
          }
        },
        {
          "name": "Get AI Blogs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/blogs/ai/blogs?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["blogs", "ai", "blogs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "AI ile olu≈üturulan bloglarƒ± listele (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:5000/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "5000",
              "path": ["health"]
            },
            "description": "Server saƒülƒ±k kontrol√º"
          }
        }
      ]
    }
  ]
}
