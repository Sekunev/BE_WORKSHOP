---
alwaysApply: true
---

# Proje Yapısı - Blog API Backend

Modern Blog API projesidir. Node.js, Express, MongoDB ve AI entegrasyonu içerir.

## Ana Dizin Yapısı

- [server.js](mdc:server.js) - Ana giriş noktası, Express server konfigürasyonu
- [package.json](mdc:package.json) - Bağımlılıklar ve scriptler
- [env.example](mdc:env.example) - Environment variables şablonu

## Kaynak Kod Dizini (src/)

### Controllers (src/controllers/)
- [authController.js](mdc:src/controllers/authController.js) - Kimlik doğrulama işlemleri
- [blogController.js](mdc:src/controllers/blogController.js) - Blog CRUD işlemleri ve AI blog fonksiyonları
- [userController.js](mdc:src/controllers/userController.js) - Kullanıcı işlemleri

### Models (src/models/)
- [User.js](mdc:src/models/User.js) - Kullanıcı şeması
- [Blog.js](mdc:src/models/Blog.js) - Blog şeması (AI metadata dahil)
- [Comment.js](mdc:src/models/Comment.js) - Yorum şeması

### Routes (src/routes/)
- [authRoutes.js](mdc:src/routes/authRoutes.js) - Auth endpoint'leri
- [blogRoutes.js](mdc:src/routes/blogRoutes.js) - Blog ve AI blog endpoint'leri
- [userRoutes.js](mdc:src/routes/userRoutes.js) - Kullanıcı endpoint'leri

### Middleware (src/middleware/)
- [auth.js](mdc:src/middleware/auth.js) - JWT doğrulama ve yetkilendirme
- [errorHandler.js](mdc:src/middleware/errorHandler.js) - Global hata yönetimi
- [validation.js](mdc:src/middleware/validation.js) - Validation error handler

### Services (src/services/)
- [groqService.js](mdc:src/services/groqService.js) - Groq API entegrasyonu, AI blog oluşturma

### Config (src/config/)
- [database.js](mdc:src/config/database.js) - MongoDB bağlantısı
- [swagger.js](mdc:src/config/swagger.js) - Swagger/OpenAPI konfigürasyonu

### Utils (src/utils/)
- [blogScheduler.js](mdc:src/utils/blogScheduler.js) - Otomatik blog zamanlaması
- [createAdmin.js](mdc:src/utils/createAdmin.js) - Admin kullanıcı oluşturma
- [userCLI.js](mdc:src/utils/userCLI.js) - Kullanıcı yönetimi CLI
- [seedData.js](mdc:src/utils/seedData.js) - Test verisi oluşturma

## Frontend (blog-frontend/)

Next.js tabanlı frontend uygulaması.

## Önemli Özellikler

1. **JWT Authentication** - Token tabanlı kimlik doğrulama
2. **Role-Based Access** - Admin/User rolleri
3. **AI Blog Generation** - Groq API ile otomatik blog oluşturma
4. **Scheduled Tasks** - Cron job ile zamanlanmış blog oluşturma
5. **Swagger Docs** - API dokümantasyonu
6. **Rate Limiting** - API güvenliği
7. **File Upload** - Multer ile dosya yükleme

## Teknoloji Stack

- **Backend:** Node.js, Express.js
- **Database:** MongoDB, Mongoose
- **Authentication:** JWT, bcrypt
- **AI:** Groq API (llama-3.3-70b-versatile)
- **Scheduler:** node-cron
- **Documentation:** Swagger/OpenAPI
- **Frontend:** Next.js, React, TypeScript
