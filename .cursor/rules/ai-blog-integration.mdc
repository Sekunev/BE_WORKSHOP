---
description: Yapay zeka ile otomatik blog oluşturma sistemi entegrasyonu
globs: src/services/groqService.js,src/utils/blogScheduler.js,src/controllers/blogController.js
---

# AI Blog Oluşturma Sistemi

Bu proje, Groq API kullanarak otomatik blog yazıları oluşturan bir yapay zeka entegrasyonuna sahiptir.

## Temel Bileşenler

### 1. Groq API Servisi
Dosya: [groqService.js](mdc:src/services/groqService.js)

**Özellikler:**
- Groq API ile iletişim (`llama-3.3-70b-versatile` modeli)
- Önceden tanımlı 8 farklı blog konusu
- Rastgele blog oluşturma fonksiyonu
- Özelleştirilebilir blog parametreleri (tarz, kelime sayısı, hedef kitle)

**Kullanılan Model:**
- Model: `llama-3.3-70b-versatile` (ücretsiz)
- API: Groq Chat Completions API

**Blog Konuları:**
1. Yapay Zeka İş Dünyasını Nasıl Dönüştürüyor?
2. 2025'te Öne Çıkacak Teknoloji Trendleri
3. Remote Çalışma Kültürü ve Verimlilik
4. JavaScript ES2024 Yenilikleri
5. Dijital Pazarlama Temelleri
6. Online Eğitimde Başarı Sırları
7. Yeni Nesil Öğrenme Platformları
8. Kariyer Değişimi için Yol Haritası

**Parametreler:**
- `tarz`: profesyonel, samimi, akademik, eğitici
- `kelimeSayisi`: 800, 1200, 1500
- `hedefKitle`: yeni başlayanlar, profesyoneller, öğrenciler

### 2. Blog Scheduler
Dosya: [blogScheduler.js](mdc:src/utils/blogScheduler.js)

**Zamanlanmış Görevler:**
- **Günlük:** Her gün saat 09:00'da otomatik blog oluşturma
- **Haftalık:** Pazartesi ve Perşembe 14:00'de otomatik blog oluşturma
- **Test Modu:** Geliştirme ortamında her 2 saatte bir (ENABLE_TEST_SCHEDULER=true)

**Özellikler:**
- Singleton pattern ile tek instance
- Timezone: Europe/Istanbul
- Admin kullanıcı ile otomatik yayınlama
- Manuel tetikleme desteği
- Durum sorgulama fonksiyonu

### 3. Blog Controller AI Fonksiyonları
Dosya: [blogController.js](mdc:src/controllers/blogController.js)

**Yeni Endpoint'ler:**
- `POST /api/blogs/ai/generate` - Parametreli AI blog oluşturma
- `POST /api/blogs/ai/generate-random` - Rastgele AI blog oluşturma
- `GET /api/blogs/ai/topics` - Kullanılmış/kullanılmamış konuları getirme
- `GET /api/blogs/ai/blogs` - AI bloglarını listeleme

**Yetkilendirme:**
Tüm AI endpoint'leri sadece **admin** kullanıcılar tarafından erişilebilir.

### 4. Blog Model Güncellemeleri
Dosya: [Blog.js](mdc:src/models/Blog.js)

**Yeni Alanlar:**
```javascript
aiGenerated: Boolean // Blog AI tarafından oluşturuldu mu?
aiMetadata: {
  konu: String
  tarz: String
  kelimeSayisi: Number
  hedefKitle: String
  model: String
  generatedAt: Date
}
```

## Environment Variables

```env
# AI Integration (Groq API)
GROQ_API_KEY=gsk_xxxxxxxxxxxxxxxx
GROQ_MODEL=llama-3.3-70b-versatile

# Blog Scheduler
ENABLE_AUTO_SCHEDULER=true
ENABLE_TEST_SCHEDULER=false
```

## Kullanım

### Manuel Blog Oluşturma
```bash
POST /api/blogs/ai/generate
Authorization: Bearer {admin_token}

{
  "konu": "Yapay Zeka İş Dünyasını Nasıl Dönüştürüyor?",
  "tarz": "profesyonel",
  "kelimeSayisi": 1200,
  "hedefKitle": "profesyoneller",
  "autoPublish": true
}
```

### Rastgele Blog Oluşturma
```bash
POST /api/blogs/ai/generate-random
Authorization: Bearer {admin_token}

{
  "autoPublish": true
}
```

### Scheduler Kontrolü
Scheduler server başlangıcında otomatik olarak başlar. `ENABLE_AUTO_SCHEDULER` environment variable ile kontrol edilir.

## Gerekli Paketler

- `axios`: ^1.6.2 (Groq API iletişimi)
- `node-cron`: ^3.0.3 (Zamanlanmış görevler)

## Önemli Notlar

1. **API Key Güvenliği:** GROQ_API_KEY'i asla commit etmeyin
2. **Rate Limiting:** Groq API free tier limitlerine dikkat edin
3. **Admin Kullanıcı:** Scheduler çalışması için en az bir admin kullanıcı gereklidir
4. **Timezone:** Tüm zamanlamalar Europe/Istanbul timezone'unda çalışır
5. **Test Modu:** Production'da ENABLE_TEST_SCHEDULER mutlaka false olmalı

## Swagger Dokümantasyonu

AI endpoint'leri Swagger'a eklenmiştir. Tag: **AI Blogs**

```
http://localhost:5000/api-docs
```
